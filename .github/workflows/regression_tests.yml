# This is a basic workflow to help you get started with Actions

name: regression-tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master", "for-shop" ]
  pull_request:
    branches: [ "master", "for-shop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


  


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lisp:
          - sbcl
          - ccl
          - allegro
    container:
      image: clfoundation/${{ matrix.lisp }}:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout random-state
        uses: actions/checkout@v3
        
      - name: install quicklisp
        run: install-quicklisp

      - name: Link the project
        run: ln -s $GITHUB_WORKSPACE/random-state /github/home/quicklisp/local-projects

      # Runs a set of commands using the runners shell
      - name: SBCL
        if: ${{ matrix.lisp }} == sbcl
        run: sbcl  --disable-debugger --load /github/home/quicklisp/setup.lisp --eval '(ql:quickload "random-state")' --eval '(asdf:test-system "random-state")' --eval '(uiop:quit 0)'
      - name: Allegro
        if: ${{ matrix.lisp }} == allegro
        run: alisp -L /github/home/quicklisp/setup.lisp --disable-debugger -e '(ql:quickload "random-state")' -e '(asdf:test-system "random-state")' --kill
      - name: Clozure
        if: ${{ matrix.lisp }} == ccl
        run: ccl --batch --load /github/home/quicklisp/setup.lisp --eval '(ql:quickload "random-state")' --eval '(asdf:test-system "random-state")' --eval '(uiop:quit 0)'
        
